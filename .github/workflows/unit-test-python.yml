name: unit-test-python

on:
  pull_request:
    branches:
      - main
    paths:
      - '.github/workflows/unit-test-python.yml'
      - '**/*.py'
      - '**/requirements.txt'

jobs:
  generate-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Generate matrix
        id: set-matrix
        run: |
          # Find all directories containing .py files
          py_dirs=$(find . -type f -name "*.py" -exec dirname {} \; | sort -u)

          root_dirs=""
          for dir in $py_dirs; do
            parent=$(dirname "$dir")

            # If parent does not contain any .py files, consider as root dir
            if ! find "$parent" -maxdepth 1 -type f -name "*.py" | grep -q .; then
              root_dirs="$root_dirs $dir"
            fi

          done

          # Remove leading/trailing whitespace
          root_dirs=$(echo $root_dirs | xargs)
          echo "Found applications directories: $root_dirs"

          matrix="$(echo $root_dirs | jq -Rsc '. | split(" ") | {app: .}')"
          echo "Genrated matrix: $matrix"
          echo "matrix=$matrix" >> $GITHUB_OUTPUT

  unittest:
    needs: generate-matrix
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson(needs.generate-matrix.outputs.matrix) }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
      - name: Install dependencies and run tests
        run: |
          cd ${{ matrix.app}}
          python -m venv venv
          source venv/bin/activate
         
          # Install dependencies if requirements.txt exists
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          fi

          python3 -m unittest discover
          deactivate
